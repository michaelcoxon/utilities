{"version":3,"sources":["..\\webpack/bootstrap 5f35e28b4ba1b7a3afe0","..\\./lib/Strings.ts","..\\./lib/Exceptions.ts","..\\./lib/ErrorHelper.ts","..\\./lib/Event.ts","..\\./lib/ILogger.ts","..\\./lib/ScopedLogger.ts","..\\./lib/StringBuilder.ts","..\\./lib/AsyncWrapper.ts","..\\./lib/ConsoleLogger.ts","..\\./lib/IDisposable.ts","..\\./lib/Lazy.ts","..\\./lib/LazyAsync.ts","..\\./lib/Path.ts","..\\./lib/SingleInvokeEvent.ts","..\\./lib/Utilities.ts","..\\./lib/index.ts"],"names":[],"mappings":"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","file":"index.debug.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5f35e28b4ba1b7a3afe0","const WHITESPACE = \"\\\\s\\\\uFEFF\\\\xA0\";\r\n\r\n/**\r\n * An empty string.\r\n */\r\nexport const empty = '';\r\n/**\r\n * A new line.\r\n */\r\nexport const newLine = \"\\n\";\r\n\r\nexport function format(format: string, ...args: any[]): string\r\n{\r\n    try\r\n    {\r\n        return format.replace(/{(\\d+(:.*)?)}/g, (match, i) =>\r\n        {\r\n            var s = match.split(':');\r\n            if (s.length > 1)\r\n            {\r\n                i = i[0];\r\n                match = s[1].replace('}', empty);\r\n            }\r\n\r\n            var arg = convertToString(match, args[i]);\r\n            return typeof arg != 'undefined' && arg != null ? arg : empty;\r\n        });\r\n    }\r\n    catch (e)\r\n    {\r\n        return empty;\r\n    }\r\n}\r\n\r\n/**\r\n * Trims the whitespace from the start and end of a string\r\n * @param str The string to trim\r\n */\r\nexport function trim(str: string): string;\r\n/**\r\n * Trims the specified characters from the start and end of a string\r\n * @param str The string to trim\r\n * @param chars The set of characters to trim. This treats the characters\r\n *              individually and it will not work if you need to trim a\r\n *              specific string from the start/end.\r\n */\r\nexport function trim(str: string, chars: string): string;\r\nexport function trim(str: string, chars?: string): string\r\n{\r\n    if (chars !== undefined)\r\n    {\r\n        chars = escapeRegExp(chars)\r\n    }\r\n    else\r\n    {\r\n        chars = WHITESPACE\r\n    }\r\n    var regex = new RegExp(`^[${chars}]+|[${chars}]+$`, 'g');\r\n    return str.replace(regex, empty);\r\n}\r\n\r\n/**\r\n * Trims the whitespace from the start of a string\r\n * @param str The string to trim\r\n */\r\nexport function trimStart(str: string): string;\r\n/**\r\n * Trims the specified characters from the start of a string\r\n * @param str The string to trim\r\n * @param chars The set of characters to trim. This treats the characters\r\n *              individually and it will not work if you need to trim a\r\n *              specific string from the start/end.\r\n */\r\nexport function trimStart(str: string, chars: string): string;\r\nexport function trimStart(str: string, chars?: string): string\r\n{\r\n    if (chars !== undefined)\r\n    {\r\n        chars = escapeRegExp(chars)\r\n    }\r\n    else\r\n    {\r\n        chars = WHITESPACE\r\n    }\r\n    var regex = new RegExp(`^[${chars}]+`, 'g');\r\n    return str.replace(regex, empty);\r\n}\r\n\r\n/**\r\n * Trims the whitespace from the end of a string\r\n * @param str The string to trim\r\n */\r\nexport function trimEnd(str: string): string;\r\n/**\r\n * Trims the specified characters from the end of a string\r\n * @param str The string to trim\r\n * @param chars The set of characters to trim. This treats the characters\r\n *              individually and it will not work if you need to trim a\r\n *              specific string from the start/end.\r\n */\r\nexport function trimEnd(str: string, chars: string): string;\r\nexport function trimEnd(str: string, chars?: string): string\r\n{\r\n    if (chars !== undefined)\r\n    {\r\n        chars = escapeRegExp(chars)\r\n    }\r\n    else\r\n    {\r\n        chars = WHITESPACE\r\n    }\r\n    var regex = new RegExp(`[${chars}]+$`, 'g');\r\n    return str.replace(regex, empty);\r\n}\r\n\r\n/**\r\n * Returns true if the string is undefined, null or empty\r\n * @param str\r\n */\r\nexport function isNullOrEmpty(str?: string | null): boolean\r\n{\r\n    return str === undefined || str === null || str.length == 0;\r\n}\r\n\r\n/**\r\n * Returns true if the string is undefined, null or whitespace\r\n * @param str\r\n */\r\nexport function isNullOrWhitespace(str?: string | null): boolean\r\n{\r\n    var regex = new RegExp(`^[${WHITESPACE}]+$`, 'g');\r\n    return str === undefined || str === null || regex.test(str);\r\n}\r\n\r\n/**\r\n * Returns all characters in the string as an array.\r\n * @param str\r\n */\r\nexport function toCharArray(str: string): string[]\r\n{\r\n    return str.split(empty);\r\n}\r\n\r\nfunction escapeRegExp(str)\r\n{\r\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\n\r\nfunction convertToString(match: string, arg: any): string\r\n{\r\n    if (typeof arg === 'string')\r\n    {\r\n        return formatString(match, arg);\r\n    }\r\n    if (typeof arg === 'number')\r\n    {\r\n        return formatNumber(match, arg);\r\n    }\r\n\r\n    // default\r\n    return formatString(match, empty + arg);\r\n}\r\n\r\nfunction formatString(match: string, arg: string): string\r\n{\r\n    switch (match)\r\n    {\r\n        case 'L':\r\n            arg = arg.toLowerCase();\r\n            break;\r\n        case 'U':\r\n            arg = arg.toUpperCase();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return arg;\r\n}\r\n\r\nfunction formatNumber(match: string, arg: number): string\r\n{\r\n    switch (match.toLowerCase())\r\n    {\r\n        case 'f0':\r\n            arg = parseInt(arg.toString());\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return arg.toString();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/Strings.ts","import * as Strings from './Strings';\r\n\r\n/**\r\n * Represents errors that occur during application execution.\r\n */\r\nexport class Exception extends Error\r\n{\r\n    private readonly _innerException?: Exception;\r\n\r\n    __proto__: Error;\r\n\r\n    /**\r\n     * Creates a new Exception\r\n     */\r\n    constructor();\r\n    /**\r\n     * Creates a new Exception with a message\r\n     * @param message the message\r\n     */\r\n    constructor(message: string);\r\n    /**\r\n     * Creates a new Exception with a message and an inner exception\r\n     * @param message the message\r\n     * @param innerException this is used to capture any exceptions that were\r\n     *                       called before this exception.\r\n     */\r\n    constructor(message: string, innerException: Exception);\r\n    constructor(message?: string, innerException?: Exception)\r\n    {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n\r\n        // Alternatively use Object.setPrototypeOf if you have an ES6 environment.\r\n        this.__proto__ = trueProto;\r\n\r\n        this._innerException = innerException;\r\n    }\r\n\r\n    /** Gets the Exception instance that caused the current exception. */\r\n    public get innerException(): Exception | undefined\r\n    {\r\n        return this._innerException;\r\n    }\r\n\r\n    public static isException(error: Error): error is Exception\r\n    {\r\n        return (<any>error)['innerException'] !== undefined\r\n    }\r\n}\r\n\r\n/**\r\n * The exception that is thrown when one of the arguments provided to a method is not valid.\r\n */\r\nexport class ArgumentException extends Exception\r\n{\r\n    /**\r\n     * Creates a new Argument Exception\r\n     * @param argumentName the name of the argument that is invalid\r\n     */\r\n    constructor(argumentName: string);\r\n    /**\r\n     * Creates a new Argument Exception\r\n     * @param argumentName the name of the argument that is invalid\r\n     * @param message the message\r\n     */\r\n    constructor(argumentName: string, message: string);\r\n    /**\r\n     * Creates a new Argument Exception\r\n     * @param argumentName the name of the argument that is invalid\r\n     * @param message the message\r\n     * @param innerException this is used to capture any exceptions that were\r\n     *                       called before this exception.\r\n     */\r\n    constructor(argumentName: string, message: string, innerException: Exception);\r\n    constructor(argumentName: string, message?: string, innerException?: Exception)\r\n    {\r\n        const _message = `'${argumentName}' ${message}`;\r\n        if (innerException)\r\n        {\r\n            super(_message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(_message);\r\n        }\r\n        this.name = 'ArgumentException';\r\n    }\r\n}\r\n\r\n\r\nexport class ArgumentUndefinedException extends ArgumentException\r\n{\r\n    constructor(argumentName: string, innerException?: Exception)\r\n    {\r\n        const _message = argumentName + ' is undefined';\r\n        if (innerException)\r\n        {\r\n            super(argumentName, _message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(argumentName, _message);\r\n        }\r\n\r\n        this.name = 'ArgumentUndefinedException';\r\n    }\r\n}\r\n\r\nexport class ArgumentNullException extends ArgumentException\r\n{\r\n    constructor(argumentName: string, innerException?: Exception)\r\n    {\r\n        const _message = argumentName + ' is null';\r\n        if (innerException)\r\n        {\r\n            super(argumentName, _message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(argumentName, _message);\r\n        }\r\n\r\n        this.name = 'ArgumentNullException';\r\n    }\r\n}\r\n\r\nexport class InvalidTypeException extends Exception\r\n{\r\n    constructor(variableName: string, expectedTypeName: string, message?: string, innerException?: Exception)\r\n    {\r\n        const _message = `Type of '${variableName}' is not supported. Expected: '${expectedTypeName}'` + (message !== undefined ? message : Strings.empty);\r\n        if (innerException)\r\n        {\r\n            super(_message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(_message);\r\n        }\r\n\r\n        this.name = 'InvalidTypeException';\r\n    }\r\n}\r\n\r\nexport class NotImplementedException extends Exception\r\n{\r\n    constructor(message?: string, innerException?: Exception)\r\n    {\r\n        if (innerException)\r\n        {\r\n            super(message!, innerException);\r\n        }\r\n        else\r\n        {\r\n            if (message)\r\n            {\r\n                super(message);\r\n            } else\r\n            {\r\n                super();\r\n            }\r\n        }\r\n        this.name = 'NotImplementedException';\r\n    }\r\n}\r\n\r\nexport class NotSupportedException extends Exception\r\n{\r\n    constructor(message?: string, innerException?: Exception)\r\n    {\r\n        if (innerException)\r\n        {\r\n            super(message!, innerException);\r\n        }\r\n        else\r\n        {\r\n            if (message)\r\n            {\r\n                super(message);\r\n            } else\r\n            {\r\n                super();\r\n            }\r\n        }\r\n        this.name = 'NotSupportedException';\r\n    }\r\n}\r\n\r\nexport class OutOfBoundsException extends Exception\r\n{\r\n    constructor(variableName: string, minBound: number, maxBound: number, innerException?: Exception)\r\n    {\r\n        const _message = `The value of '${variableName}' is out of bounds. min: '${minBound}', max: '${maxBound}'`;\r\n        if (innerException)\r\n        {\r\n            super(_message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(_message);\r\n        }\r\n        this.name = 'OutOfBoundsException';\r\n    }\r\n}\r\n\r\nexport class IndexOutOfRangeException extends Exception\r\n{\r\n    constructor(variableName: string, index: number, minBound: number, maxBound: number, innerException?: Exception)\r\n    {\r\n        const _message = `The index of '${index}' on '${variableName}' is out of bounds. min: '${minBound}', max: '${maxBound}'`;\r\n        if (innerException)\r\n        {\r\n            super(_message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(_message);\r\n        }\r\n        this.name = 'OutOfBoundsException';\r\n    }\r\n}\r\n\r\nexport class FileNotFoundException extends Exception\r\n{\r\n    constructor(filename: string, innerException?: Exception)\r\n    {\r\n        const _message = `File '${filename}' is not found`;\r\n        if (innerException)\r\n        {\r\n            super(_message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(_message);\r\n        }\r\n        this.name = 'FileNotFoundException';\r\n    }\r\n}\r\n\r\nexport class KeyNotFoundException<TKey> extends Exception\r\n{\r\n    constructor(key: TKey, innerException?: Exception)\r\n    {\r\n        const _message = `Key '${key}' is not found`;\r\n        if (innerException)\r\n        {\r\n            super(_message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(_message);\r\n        }\r\n        this.name = 'KeyNotFoundException';\r\n    }\r\n}\r\n\r\nexport class KeyAlreadyDefinedException<TKey> extends Exception\r\n{\r\n    constructor(key: TKey, innerException?: Exception)\r\n    {\r\n        const _message = `Key '${key}' is already defined`;\r\n        if (innerException)\r\n        {\r\n            super(_message, innerException);\r\n        }\r\n        else\r\n        {\r\n            super(_message);\r\n        }\r\n        this.name = 'KeyAlreadyDefinedException';\r\n    }\r\n}\r\n\r\nexport class NullReferenceException extends Exception\r\n{\r\n    constructor(message?: string, innerException?: Exception)\r\n    {\r\n        if (innerException)\r\n        {\r\n            super(message!, innerException);\r\n        }\r\n        else\r\n        {\r\n            if (message)\r\n            {\r\n                super(message);\r\n            } else\r\n            {\r\n                super();\r\n            }\r\n        }\r\n        this.name = 'NullReferenceException';\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/Exceptions.ts","import { StringBuilder } from \"./StringBuilder\";\r\nimport { Exception } from \"./Exceptions\";\r\n\r\nexport class ErrorHelper\r\n{\r\n    public static errorToLogMessage(error: Error | Exception): string\r\n    {\r\n        const sb = new StringBuilder();\r\n\r\n        sb.appendLine(`Error '${error.name}': ${error.message}`);\r\n        if (error.stack !== undefined)\r\n        {\r\n            sb.appendLine(error.stack);\r\n        }\r\n\r\n        if (Exception.isException(error) && error.innerException !== undefined)\r\n        {\r\n            sb.appendLine(\"The following errors were also encountered:\");\r\n            sb.appendLine(ErrorHelper.errorToLogMessage(error.innerException));\r\n        }\r\n\r\n        return sb.toString();\r\n    }\r\n\r\n    public static serialize(error: Error): string\r\n    {\r\n        return JSON.stringify(Object.assign({}, error));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/ErrorHelper.ts","import { ArgumentException, ArgumentUndefinedException } from \"./Exceptions\";\r\n\r\n/** The event handler type */\r\nexport type EventHandler<TEventArgs> = (sender: any, args: TEventArgs) => void;\r\n\r\n/**\r\n * Class to represent an event.\r\n */\r\nexport class Event<TEventArgs>\r\n{\r\n    private readonly _eventHandlers: EventHandler<TEventArgs>[];\r\n\r\n    /**\r\n     * Creates a new event\r\n     */\r\n    constructor()\r\n    {\r\n        this._eventHandlers = [];\r\n    }\r\n\r\n    /**\r\n     * Invokes the event\r\n     * @param sender the object that is calling invoke\r\n     * @param args the arguments to send along with the event.\r\n     */\r\n    public invoke(sender: any, args: TEventArgs)\r\n    {\r\n        for (let eventHandler of this._eventHandlers)\r\n        {\r\n            eventHandler.call(sender, sender, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a handler to the event\r\n     * @param eventHandler\r\n     */\r\n    public addHandler(eventHandler: EventHandler<TEventArgs>): EventHandler<TEventArgs>\r\n    {\r\n        this._eventHandlers.push(eventHandler);\r\n        return eventHandler;\r\n    }\r\n\r\n    /**\r\n     * removes a handler from the event.\r\n     * @param eventHandler\r\n     */\r\n    public removeHandler(eventHandler: EventHandler<TEventArgs>): void\r\n    {\r\n        var index = this._eventHandlers.indexOf(eventHandler);\r\n\r\n        if (index != -1)\r\n        {\r\n            this._eventHandlers.splice(index, 1);\r\n        }\r\n        else\r\n        {\r\n            throw new ArgumentException('eventHandler', \"Handler is not in this Event\");\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/Event.ts","import { IDisposable } from \"./IDisposable\";\r\n\r\n/** The log level. Used for filtering and tagging logging events */\r\nexport enum LogLevel\r\n{\r\n    /** Debug. Should only be used for logging to help development */\r\n    Debug = \"DEBG\",\r\n    /** Error. Used to log out errors and exceptions */\r\n    Error = \"EROR\",\r\n    /** Informational. Used to provide runtime information */\r\n    Info = \"INFO\",\r\n    /** Trace. Used to log program flow */\r\n    Trace = \"TRCE\",\r\n    /** Warning. Used to log errors and exceptions that do not break the program but need to be klnown about */\r\n    Warn = \"WARN\",\r\n}\r\n/**\r\n * Returns true if the desired log level is valid for the currently configured logging verbosity\r\n * @param desiredLevel The log level you want to log at\r\n * @param loggingVerbosity The cut off for when logging should be hidden\r\n */\r\nexport function testLogVerbosity(desiredLevel: LogLevel, loggingVerbosity: LogLevel): boolean\r\n{\r\n    const isError = desiredLevel === LogLevel.Error;\r\n    const isWarn = desiredLevel === LogLevel.Warn;\r\n    const isInfo = desiredLevel === LogLevel.Info;\r\n    const isTrace = desiredLevel === LogLevel.Trace;\r\n    const isDebug = desiredLevel === LogLevel.Debug;\r\n\r\n    return loggingVerbosity === LogLevel.Error && isError\r\n        || loggingVerbosity === LogLevel.Warn && (isError || isWarn)\r\n        || loggingVerbosity === LogLevel.Info && (isError || isWarn || isInfo)\r\n        || loggingVerbosity === LogLevel.Trace && (isError || isWarn || isInfo || isTrace)\r\n        || loggingVerbosity === LogLevel.Debug && (isError || isWarn || isInfo || isTrace || isDebug);\r\n}\r\n\r\n/**\r\n * Decorator for setting the logger scope of an ILogger instance\r\n * @param name\r\n */\r\nexport function loggerScope(name: string): (target: any, key: string) => void\r\n{\r\n    return (target: any, key: string) =>\r\n    {\r\n        const logger = target[key] as ILogger;\r\n        if (!logger)\r\n        {\r\n            throw \"logger is no set yet\";\r\n        }\r\n        target[key] = logger.scope(name);\r\n    };\r\n}\r\n\r\n/** ILogger interface for all logging implementations */\r\nexport interface ILogger\r\n{\r\n    /**\r\n     * Log a message flagged at the Debug log level\r\n     * @param msg\r\n     */\r\n    debug(msg: string): void;\r\n    /**\r\n     * Log an error flagged at the Debug log level\r\n     * @param err\r\n     */\r\n    debugError(err: Error): void;\r\n    /**\r\n     * Log an error and a message flagged at the Debug log level\r\n     * @param err\r\n     */\r\n    debugError(err: Error, msg: string): void;\r\n\r\n    /**\r\n    * Log a message flagged at the Error log level\r\n    * @param msg\r\n    */\r\n    error(msg: string): void;\r\n    /**\r\n     * Log an error flagged at the Error log level\r\n     * @param err\r\n     */\r\n    errorError(err: Error): void;\r\n    /**\r\n     * Log an error and a message flagged at the Error log level\r\n     * @param err\r\n     */\r\n    errorError(err: Error, msg: string): void;\r\n\r\n    /**\r\n    * Log a message flagged at the Informational log level\r\n    * @param msg\r\n    */\r\n    info(msg: string): void;\r\n    /**\r\n     * Log an error flagged at the Informational log level\r\n     * @param err\r\n     */\r\n    infoError(err: Error): void;\r\n    /**\r\n     * Log an error and a message flagged at the Informational log level\r\n     * @param err\r\n     */\r\n    infoError(err: Error, msg: string): void;\r\n\r\n    /**\r\n    * Log a message flagged at the Trace log level\r\n    * @param msg\r\n    */\r\n    trace(msg: string): void;\r\n    /**\r\n     * Log an error flagged at the Trace log level\r\n     * @param err\r\n     */\r\n    traceError(err: Error): void;\r\n    /**\r\n     * Log an error and a message flagged at the Trace log level\r\n     * @param err\r\n     */\r\n    traceError(err: Error, msg: string): void;\r\n\r\n    /**\r\n    * Log a message flagged at the Warning log level\r\n    * @param msg\r\n    */\r\n    warn(msg: string): void;\r\n    /**\r\n     * Log an error flagged at the Warning log level\r\n     * @param err\r\n     */\r\n    warnError(err: Error): void;\r\n    /**\r\n     * Log an error and a message flagged at the Warning log level\r\n     * @param err\r\n     */\r\n    warnError(err: Error, msg: string): void;\r\n\r\n    /**\r\n     * Rescope the logger with the provided name. Used for tagging the logger.\r\n     * @param name The tag the logger should be given\r\n     * @example\r\n     * Use the scope tool inside a 'using' to scope logging to a specific method.\r\n     * return using(() => logger.scope(\"theNameOfMyScope\"), logger =>\r\n     *  {\r\n     *      logger.debug(\"Log something here\");\r\n     *  });\r\n     */\r\n    scope(name: string): ILogger & IDisposable;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/ILogger.ts","import { ILogger } from \"./ILogger\";\r\nimport { IDisposable } from \"./IDisposable\";\r\n\r\nexport class ScopedLogger implements ILogger, IDisposable\r\n{\r\n    private readonly _name: string;\r\n    private readonly _logger: ILogger;\r\n\r\n    private _disposed: boolean = false;\r\n\r\n    constructor(logger: ILogger, name: string)\r\n    {\r\n        this._logger = logger;\r\n        this._name = name;\r\n    }\r\n\r\n    debug(msg: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.debug(this.prepareMessage(msg));\r\n    }\r\n\r\n    debugError(err: Error): void;\r\n    debugError(err: Error, msg: string): void;\r\n    debugError(err: Error, msg?: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.debugError(err, this.prepareMessage(msg));\r\n    }\r\n\r\n    error(msg: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.error(this.prepareMessage(msg));\r\n    }\r\n\r\n    errorError(err: Error): void;\r\n    errorError(err: Error, msg: string): void;\r\n    errorError(err: Error, msg?: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.errorError(err, this.prepareMessage(msg));\r\n    }\r\n\r\n    info(msg: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.info(this.prepareMessage(msg));\r\n    }\r\n\r\n    infoError(err: Error): void;\r\n    infoError(err: Error, msg: string): void\r\n    infoError(err: Error, msg?: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.infoError(err, this.prepareMessage(msg));\r\n    }\r\n\r\n    trace(msg: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.trace(this.prepareMessage(msg));\r\n    }\r\n\r\n    traceError(err: Error): void;\r\n    traceError(err: Error, msg: string): void\r\n    traceError(err: Error, msg?: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.traceError(err, this.prepareMessage(msg));\r\n    }\r\n\r\n    warn(msg: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.warn(this.prepareMessage(msg));\r\n    }\r\n\r\n    warnError(err: Error): void;\r\n    warnError(err: Error, msg: string): void\r\n    warnError(err: Error, msg?: string): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._logger.warnError(err, this.prepareMessage(msg));\r\n    }\r\n\r\n    scope(name: string): ILogger & IDisposable\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        return new ScopedLogger(this, name);\r\n    }\r\n\r\n    private prepareMessage(msg?: string): string\r\n    {\r\n        return `[${this._name}]${msg !== undefined ? ' ' : ''}${msg || null}`;\r\n    }\r\n\r\n    dispose(): void\r\n    {\r\n        if (this._disposed)\r\n        {\r\n            throw new Error(\"Object is disposed\");\r\n        }\r\n        this._disposed = true;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/ScopedLogger.ts","import * as Strings from './Strings';\r\n\r\n/**\r\n * Class for building strings that will only concatenate them upon calling toString().\r\n */\r\nexport class StringBuilder \r\n{\r\n    private readonly _strings: string[];\r\n\r\n    private _lastValue?: string;\r\n    private _invalidateLastValue: boolean;\r\n    /**\r\n     * Create a new StringBuilder.\r\n     * @param value\r\n     */\r\n    constructor(...value: string[])\r\n    {\r\n        if (value !== undefined)\r\n        {\r\n            this._strings = [...value];\r\n        }\r\n        else\r\n        {\r\n            this._strings = [];\r\n        }\r\n\r\n        this._invalidateLastValue = true;\r\n    }\r\n\r\n    /**\r\n     * Append the value to the builder\r\n     * @param value\r\n     */\r\n    public append(value: string): void\r\n    {\r\n        this._strings.push(value);\r\n        this._invalidateLastValue = true;\r\n    }\r\n\r\n    /**\r\n     * Appends the value to the builder with a new line afterwards.\r\n     * @param value\r\n     */\r\n    public appendLine(value: string): void\r\n    {\r\n        this._strings.push(...[value, Strings.newLine]);\r\n        this._invalidateLastValue = true;\r\n    }\r\n\r\n    /**\r\n     * Clears all values from the StringBuilder.\r\n     */\r\n    public clear(): void\r\n    {\r\n        this._strings.length = 0;\r\n        this._invalidateLastValue = true;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of the StringBuilder.\r\n     */\r\n    public toString(): string\r\n    {\r\n        if (this._invalidateLastValue)\r\n        {\r\n            this._invalidateLastValue = false;\r\n            return this._lastValue = this._strings.join(Strings.empty);\r\n        }\r\n        else\r\n        {\r\n            return this._lastValue || Strings.empty;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/StringBuilder.ts","/**\r\n * The AsyncWrapper is provided to monitor the state of a promise.\r\n * You can use this to provide state feedback to the user of an awaitable\r\n * method.\r\n */\r\nexport class AsyncWrapper<T>\r\n{\r\n    private _promise: Promise<this>;\r\n    private _complete: boolean;\r\n    private _success: boolean;\r\n    private _error: any;\r\n    private _value?: T;\r\n\r\n    /**\r\n    * Creates a new unresolved AsyncWrapper\r\n    */\r\n    constructor();\r\n    /**\r\n    * Creates a new AsyncWrapper\r\n    * @param promiseOrValue can be a promise or a value\r\n    */\r\n    constructor(promiseOrValue: T | PromiseLike<T>);\r\n    /**\r\n      * Creates a new AsyncWrapper\r\n      * @param promiseOrValue can be a promise or a value\r\n      * @param callback the callback that should be applied after the promise is resolved\r\n      */\r\n    constructor(promiseOrValue: T | PromiseLike<T>, callback: (asyncWrapper: AsyncWrapper<T>) => void);\r\n    constructor(promiseOrValue?: T | PromiseLike<T>, callback?: (asyncWrapper: AsyncWrapper<T>) => void)\r\n    {\r\n        this._complete = false;\r\n        this._success = false;\r\n        this._promise = new Promise<this>(async (resolve, reject) =>\r\n        {\r\n            if (promiseOrValue !== undefined)\r\n            {\r\n                await this.doWork(resolve, reject, promiseOrValue, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Return the internal promise that is waiting for the orginal one to complete */ \r\n    public get promise(): Promise<this>\r\n    {\r\n        return this._promise;\r\n    }\r\n\r\n    /** returns true when the promise is complete, even if it errored */\r\n    public get complete(): boolean\r\n    {\r\n        return this._complete;\r\n    }\r\n\r\n    /** returns true if the promise completed successfully */\r\n    public get success(): boolean\r\n    {\r\n        return this._success;\r\n    }\r\n\r\n    /** returns the value of the promise */\r\n    public get value(): T\r\n    {\r\n        return this._value!;\r\n    }\r\n\r\n    /** returns the error if the promise failed */\r\n    public get error(): any\r\n    {\r\n        return this._error;\r\n    }\r\n\r\n    private async doWork(\r\n        resolve: (value?: this | PromiseLike<this>) => void,\r\n        reject: (reason?: any) => void,\r\n        promiseOrValue?: T | PromiseLike<T>,\r\n        callback?: (property: AsyncWrapper<T>) => void): Promise<void>\r\n    {\r\n        try\r\n        {\r\n            this._value = await promiseOrValue;\r\n            resolve(this);\r\n            this._success = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            this._error = error;\r\n            reject(error);\r\n            this._success = false;\r\n        }\r\n        finally\r\n        {\r\n            this._complete = true;\r\n            if (callback !== undefined)\r\n            {\r\n                callback(this);\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/AsyncWrapper.ts","import { ILogger, LogLevel } from './ILogger';\r\nimport { IDisposable } from './IDisposable';\r\nimport { ErrorHelper } from \"./ErrorHelper\";\r\nimport { ScopedLogger } from \"./ScopedLogger\";\r\n\r\nconst defaultConfig: IConsoleLoggerConfig = {\r\n    loggingVerbosity: LogLevel.Info,\r\n    useTraceMethodForTraceLogLevel: false\r\n};\r\n\r\nexport interface IConsoleLoggerConfig\r\n{\r\n    /** the logging verbosity to filter on */\r\n    loggingVerbosity: LogLevel;\r\n    /** some browsers support the 'console.trace' method. this method gives out more info on trace logs. */\r\n    useTraceMethodForTraceLogLevel: boolean;\r\n}\r\n\r\nexport interface IConsole\r\n{\r\n    log: (message?: any, ...optionalParams: any[]) => void;\r\n\r\n    warn?: (message?: any, ...optionalParams: any[]) => void;\r\n    trace?: (message?: any, ...optionalParams: any[]) => void;\r\n    info?: (message?: any, ...optionalParams: any[]) => void;\r\n    error?: (message?: any, ...optionalParams: any[]) => void;\r\n}\r\n\r\nexport class ConsoleLogger implements ILogger\r\n{\r\n    private readonly _config: IConsoleLoggerConfig\r\n\r\n    private readonly _warnMethod: (message?: any, ...optionalParams: any[]) => void;\r\n    private readonly _traceMethod: (message?: any, ...optionalParams: any[]) => void;\r\n    private readonly _infoMethod: (message?: any, ...optionalParams: any[]) => void;\r\n    private readonly _errorMethod: (message?: any, ...optionalParams: any[]) => void;\r\n    private readonly _logMethod: (message?: any, ...optionalParams: any[]) => void;\r\n\r\n    constructor(console: IConsole, config: IConsoleLoggerConfig = defaultConfig)\r\n    {\r\n        this._config = config;\r\n\r\n        this._logMethod = console.log;\r\n        this._errorMethod = console.error || this._logMethod;\r\n        this._infoMethod = console.info || this._logMethod;\r\n\r\n        // sometimes the trace method is wayyyy too verbose....\r\n        this._traceMethod = config.useTraceMethodForTraceLogLevel\r\n            ? console.trace || this._logMethod\r\n            : this._logMethod;\r\n\r\n        this._warnMethod = console.warn || this._logMethod;\r\n    }\r\n\r\n    debug(msg: string): void\r\n    {\r\n        this.log(LogLevel.Debug, msg);\r\n    }\r\n\r\n    debugError(err: Error): void;\r\n    debugError(err: Error, msg: string): void\r\n    debugError(err: Error, msg?: string): void\r\n    {\r\n        const error = ErrorHelper.errorToLogMessage(err);\r\n        const message = msg !== undefined\r\n            ? `${msg}\\n${error}`\r\n            : error;\r\n        this.log(LogLevel.Debug, message);\r\n    }\r\n\r\n    error(msg: string): void\r\n    {\r\n        this.log(LogLevel.Error, msg);\r\n    }\r\n\r\n    errorError(err: Error): void;\r\n    errorError(err: Error, msg: string): void;\r\n    errorError(err: Error, msg?: string): void\r\n    {\r\n        const error = ErrorHelper.errorToLogMessage(err);\r\n        const message = msg !== undefined\r\n            ? `${msg}\\n${error}`\r\n            : error;\r\n        this.log(LogLevel.Error, message);\r\n    }\r\n\r\n    info(msg: string): void\r\n    {\r\n        this.log(LogLevel.Info, msg);\r\n    }\r\n\r\n    infoError(err: Error): void;\r\n    infoError(err: Error, msg: string): void;\r\n    infoError(err: Error, msg?: string): void\r\n    {\r\n        const error = ErrorHelper.errorToLogMessage(err);\r\n        const message = msg !== undefined\r\n            ? `${msg}\\n${error}`\r\n            : error;\r\n        this.log(LogLevel.Info, message);\r\n    }\r\n\r\n    trace(msg: string): void\r\n    {\r\n        this.log(LogLevel.Trace, msg);\r\n    }\r\n\r\n    traceError(err: Error): void;\r\n    traceError(err: Error, msg: string): void;\r\n    traceError(err: Error, msg?: string): void\r\n    {\r\n        const error = ErrorHelper.errorToLogMessage(err);\r\n        const message = msg !== undefined\r\n            ? `${msg}\\n${error}`\r\n            : error;\r\n        this.log(LogLevel.Trace, message);\r\n    }\r\n\r\n    warn(msg: string): void\r\n    {\r\n        this.log(LogLevel.Warn, msg);\r\n    }\r\n\r\n    warnError(err: Error): void;\r\n    warnError(err: Error, msg: string): void;\r\n    warnError(err: Error, msg?: string): void\r\n    {\r\n        const error = ErrorHelper.errorToLogMessage(err);\r\n        const message = msg !== undefined\r\n            ? `${msg}\\n${error}`\r\n            : error;\r\n        this.log(LogLevel.Warn, message);\r\n    }\r\n\r\n    scope(name: string): ILogger & IDisposable\r\n    {\r\n        return new ScopedLogger(this, name);\r\n    }\r\n\r\n    private log(level: LogLevel, msg: string): void\r\n    {\r\n        const message = `[${level}] ${msg}`;\r\n\r\n        switch (level)\r\n        {\r\n            case LogLevel.Error:\r\n                this._errorMethod(message);\r\n                break;\r\n\r\n            case LogLevel.Warn:\r\n                this._warnMethod(message);\r\n                break;\r\n\r\n            case LogLevel.Info:\r\n                this._infoMethod(message);\r\n                break;\r\n\r\n            case LogLevel.Trace:\r\n                this._traceMethod(message);\r\n                break;\r\n\r\n            case LogLevel.Debug:\r\n            default:\r\n                this._logMethod(message);\r\n                break;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/ConsoleLogger.ts","/** interface for disposable objects */\r\nexport interface IDisposable\r\n{\r\n    dispose(): void;\r\n}\r\n\r\n/**\r\n * creates a disposable object then cleans it up after inner has finished execution. DO NOT USE ON PROMISES!!! use `usingAsync` instead.\r\n * @param disposableObjectFactory\r\n * @param inner\r\n */\r\nexport function using<T extends IDisposable, TResult>(disposableObjectFactory: () => T, inner: (disposableObject: T) => TResult): TResult\r\n{\r\n    const disposableObject = disposableObjectFactory();\r\n\r\n    try\r\n    {\r\n        return inner(disposableObject);\r\n    }\r\n    finally\r\n    {\r\n        disposableObject.dispose()\r\n    }\r\n}\r\n\r\n/**\r\n * creates a disposable object then cleans it up after inner has resolved.\r\n * @param disposableObjectFactory\r\n * @param inner\r\n */\r\nexport async function usingAsync<T extends IDisposable, TResult>(disposableObjectFactory: () => T, inner: (disposableObject: T) => Promise<TResult>): Promise<TResult>\r\n{\r\n    const disposableObject = disposableObjectFactory();\r\n\r\n    try\r\n    {\r\n        return await inner(disposableObject);\r\n    }\r\n    finally\r\n    {\r\n        disposableObject.dispose()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/IDisposable.ts","\r\n\r\n\r\nexport class Lazy<T>\r\n{\r\n    private readonly _factory: () => T;\r\n    private _value?: T;\r\n\r\n    constructor(factory: () => T)\r\n    {\r\n        this._factory = factory;\r\n    }\r\n\r\n    public get value(): T\r\n    {\r\n        return this._value || (this._value = this._factory());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Lazy.ts","\r\nexport class LazyAsync<T>\r\n{\r\n    private readonly _factory: () => Promise<T>;\r\n    private _value?: T;\r\n\r\n    constructor(factory: () => Promise<T>)\r\n    {\r\n        this._factory = factory;\r\n    }\r\n\r\n    public get value(): Promise<T>\r\n    {\r\n        return new Promise<T>(async (resolve, reject) =>\r\n        {\r\n            if (this._value !== undefined)\r\n            {\r\n                resolve(this._value);\r\n            }\r\n            else\r\n            {\r\n                try\r\n                {\r\n                    resolve(await this._factory());\r\n                }\r\n                catch (ex)\r\n                {\r\n                    reject(ex);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/LazyAsync.ts","import { ArgumentException } from \"./Exceptions\";\r\nimport * as Strings from './Strings';\r\n\r\nvar URI_REGEX = /^(([^:]+:\\\\)|([^:/?#]+:)?(\\/\\/([^/?#]*)[\\\\/])?)(([^\\\\/]+[\\\\/])*)([^/?#]*)(\\?[^#]*)?(#.*)?$/gi;\r\n\r\nexport class Path\r\n{\r\n    public static getFileName(path: string): string\r\n    {\r\n        return path.replace(URI_REGEX, \"$8\");\r\n    }\r\n\r\n    public static getDirectory(path: string): string\r\n    {\r\n        return path.replace(URI_REGEX, \"$6\");\r\n    }\r\n\r\n    public static getExtension(path: string): string\r\n    {\r\n        let fileName = Path.getFileName(path);\r\n\r\n        if (fileName.indexOf('.') == -1)\r\n        {\r\n            return \"\";\r\n        }\r\n\r\n        return fileName.substring(fileName.lastIndexOf('.'));\r\n    }\r\n\r\n    public static getFileNameWithoutExtension(path: string): string\r\n    {\r\n        let fileName = Path.getFileName(path);\r\n\r\n        if (fileName.indexOf('.') == -1)\r\n        {\r\n            return fileName;\r\n        }\r\n\r\n        return fileName.substring(0, fileName.lastIndexOf('.'))\r\n    }\r\n\r\n    /**\r\n     * convert a string into a url friendly version\r\n     * @param str\r\n     * @param noTrim if true, it will leave hyphens (-) on the\r\n     *               start and end of the url. You probably will\r\n     *               never want this.\r\n     */ \r\n    public static toFriendlyUrl(str: string, noTrim: boolean = false): string\r\n    {\r\n        let out = str.toLowerCase();\r\n        out = out.replace(/&/g, \" and \");\r\n        out = out.replace(/@/g, \" at \");\r\n        out = out.replace(/[,'\"]/g, \"\");\r\n        out = out.replace(/[^a-z0-9]+/g, \"-\");\r\n        out = out.replace(/^-+|-+$/g, \"-\");\r\n\r\n        if (!noTrim)\r\n        {\r\n            out = out.replace(/^-+|-+$/g, '');\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    public static combine(...args: string[]): string\r\n    {\r\n        if (args.length == 0)\r\n        {\r\n            throw new ArgumentException(\"path\", \"Provide at least 1 path to combine\");\r\n        }\r\n\r\n        let segments = args.map(arg => Strings.trim(arg, '/\\\\'));\r\n\r\n        if (args[0].indexOf('\\\\') != -1)\r\n        {\r\n            return segments.join('\\\\');\r\n        }\r\n\r\n        return segments.join('/');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/Path.ts","import { Event, EventHandler } from \"./Event\";\r\n\r\n/**\r\n * An event type that can only be invoked once. Once the event\r\n * is invoked, and handler that is added to it will be immediately\r\n * executed.\r\n */\r\nexport class SingleInvokeEvent<TEventArgs> extends Event<TEventArgs>\r\n{\r\n    /** event has been fired */\r\n    private _fired: boolean;\r\n    /** the firing sender */\r\n    private _sender?: any;\r\n    /** the firing args */\r\n    private _args?: TEventArgs;\r\n\r\n    /**\r\n     * Create a new singly invokable event.\r\n     */\r\n    constructor()\r\n    {\r\n        super();\r\n        this._fired = false;\r\n    }\r\n\r\n    // Add a handler to the event\r\n    public addHandler(eventHandler: EventHandler<TEventArgs>): EventHandler<TEventArgs>\r\n    {\r\n        super.addHandler(eventHandler);\r\n\r\n        if (this._fired)\r\n        {\r\n            eventHandler.call(this._sender, this._sender, this._args);\r\n        }\r\n\r\n        return eventHandler;\r\n    }\r\n\r\n    // invoke the event\r\n    public invoke(sender: any, args: TEventArgs)\r\n    {\r\n        /// <signature>\r\n        /// <summary>Invoke the event handlers</summary>\r\n        /// <param type='Object' name='sender'>The object that raised/owns the event</param>\r\n        /// <param type='Object' name='sender'>Any to be passed as arguments to the handlers</param>\r\n        /// </signature>\r\n        if (this._fired)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this._fired = true;\r\n        this._sender = sender;\r\n        this._args = args;\r\n\r\n        super.invoke(sender, args);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/SingleInvokeEvent.ts","import { ArgumentException } from './Exceptions';\r\nimport * as Strings from './Strings';\r\n\r\nconst KEYVALUESEPARATOR = \":\";\r\n\r\n/**\r\n * helper type for representing constructors\r\n */\r\nexport type ConstructorFor<T> =\r\n    {\r\n        new(...value: any[]): T;\r\n    }\r\n\r\n/**\r\n * returns true if the two objects are equal but not the same object. (compares public keys)\r\n * @param obj1\r\n * @param obj2\r\n * @param forceJSON converts the objects to JSON and compares the two strings.\r\n * @param deep Does a deep compare. forceJSON must be false\r\n */\r\nexport function equals<T>(obj1: T, obj2: T, forceJSON: boolean = false, deep: boolean = false): boolean\r\n{\r\n    let state = false;\r\n\r\n    if (!forceJSON)\r\n    {\r\n        for (let key in obj1)\r\n        {\r\n            if (obj1.hasOwnProperty(key))\r\n            {\r\n                if (deep)\r\n                {\r\n                    state = equals(obj1[key], obj2[key], forceJSON, deep);\r\n                }\r\n                else\r\n                {\r\n                    state = obj1[key] == obj2[key];\r\n                }\r\n\r\n                if (!state)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        state = equivilentToByJSON(obj1, obj2);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n/**\r\n * returns true if the two objects are equal but not the same object. (compares the JSON equilient of each object).. should be faster.. should..\r\n * @param obj1\r\n * @param obj2\r\n */\r\nexport function equivilentToByJSON<T>(obj1: T, obj2: T): boolean\r\n{\r\n    return JSON.stringify(obj1) == JSON.stringify(obj2);\r\n}\r\n\r\n/**\r\n * returns a hash of the object\r\n * @param o\r\n */\r\nexport function getHash(o: any): string\r\n{\r\n    let hash: string = Strings.empty;\r\n\r\n    if (!!JSON && !!JSON.stringify)\r\n    {\r\n        for (let key in o)\r\n        {\r\n            if (o.hasOwnProperty(key))\r\n            {\r\n                hash += `${key}${KEYVALUESEPARATOR}${o[key]}`;\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        hash = JSON.stringify(o);\r\n    }\r\n\r\n    return hashString(hash).toString();\r\n}\r\n\r\n/**\r\n * Returns the type of the object as a string\r\n * @param o\r\n */\r\nexport function getType(o: any): string\r\n{\r\n    // null\r\n    if (o === null)\r\n    {\r\n        return 'null';\r\n    }\r\n\r\n    // jquery\r\n    if (o.fn !== undefined && o.fn.jquery !== undefined)\r\n    {\r\n        return 'jQuery';\r\n    }\r\n\r\n    // value types\r\n    if (typeof (o) != 'object')\r\n    {\r\n        return typeof (o);\r\n    }\r\n\r\n    // MicrosoftAjax\r\n    if (o.constructor.getName && o.constructor.getName() != null)\r\n    {\r\n        return o.constructor.getName();\r\n    }\r\n\r\n    // constructor method name\r\n    if (o.constructor.name === undefined)\r\n    {\r\n        var name = o.constructor.toString().match(/^[\\n\\r\\s]*function\\s*([^\\s(]+)/)[1]\r\n        if (!Strings.isNullOrEmpty(name))\r\n        {\r\n            return name;\r\n        }\r\n    }\r\n    else if (!Strings.isNullOrEmpty(o.constructor.name))\r\n    {\r\n        return o.constructor.name;\r\n    }\r\n\r\n    // fallback\r\n    return typeof o;\r\n}\r\n\r\n\r\nfunction hashString(str: string): number\r\n{\r\n    if (str.length === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (Array.prototype.reduce === undefined)\r\n    {\r\n        var hash = 0, i, chr;\r\n        for (i = 0; i < str.length; i++)\r\n        {\r\n            chr = str.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    }\r\n    else\r\n    {\r\n        return str.split(Strings.empty)\r\n            .map(chr => chr.charCodeAt(0))\r\n            .reduce((hash, chr) => (((hash << 5) - hash) + chr) | 0);\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./lib/Utilities.ts","export * from \"./AsyncWrapper\";\r\nexport * from \"./ConsoleLogger\";\r\nexport * from \"./ErrorHelper\";\r\nexport * from \"./Event\";\r\nexport * from \"./Exceptions\";\r\nexport * from \"./IDisposable\";\r\nexport * from \"./ILogger\";\r\nexport * from \"./Lazy\";\r\nexport * from \"./LazyAsync\";\r\nexport * from \"./Path\";\r\nexport * from \"./ScopedLogger\";\r\nexport * from \"./SingleInvokeEvent\";\r\nexport * from \"./StringBuilder\";\r\nexport * from \"./Strings\";\r\nexport * from \"./Utilities\";\n\n\n// WEBPACK FOOTER //\n// ./lib/index.ts"],"sourceRoot":""}